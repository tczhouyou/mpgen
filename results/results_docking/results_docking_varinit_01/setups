var_init: -0.1 - 0.1
mdnmp_struct = {'d_feat': 20,
                'feat_layers': [40], #[60]
                'mean_layers': [60], #[60]
                'scale_layers': [60],
                'mixing_layers': [20]}

mdnmp.lratio = {'likelihood': 1, 'mce': 0, 'regularization': 0.00001, 'failure': 0, 'eub': 0}

        print(">>>> train elk MDN")
        mdnmp.lratio['entropy'] = 1
        mdnmp.is_orthogonal_cost=True
        mdnmp.is_mce_only=False
        oelk[0, i] = train_evaluate_mdnmp_for_docking(mdnmp, trqueries, trvmps, tdata,
                                                            max_epochs=20000,
                                                            sample_num=10, learning_rate=0.00003)


        print(">>>> train ori MDN")
        mdnmp.lratio['entropy'] = 0
        omdn[0, i] = train_evaluate_mdnmp_for_docking(mdnmp, trqueries, trvmps, tdata,
                                                            max_epochs=20000,
                                                            sample_num=10, learning_rate=0.00003)


        print(">>>> train orthognal mce MDN")
        mdnmp.lratio['entropy'] = 3
        mdnmp.is_orthogonal_cost=True
        mdnmp.is_mce_only=True
        omce[0, i] = train_evaluate_mdnmp_for_docking(mdnmp, trqueries, trvmps, tdata,
                                                            max_epochs=20000,
                                                            sample_num=10, learning_rate=0.00003)
        print(">>>> train mce MDN")
        mdnmp.lratio['entropy'] = 3
        mdnmp.is_orthogonal_cost=False
        mdnmp.is_mce_only=True
        mce[0, i] = train_evaluate_mdnmp_for_docking(mdnmp, trqueries, trvmps, tdata,
                                                            max_epochs=20000,
                                                            sample_num=10, learning_rate=0.00003)


        print(">>>> train baselines")
        baseline[0, i] = train_evaluate_baseline_for_docking('GPR', trqueries, trvmps, tdata, sample_num=10)


